@page "/editrestaurant/{RestaurantId:int}"
@layout AdminMainLayout
@using ASMC6.Shared
@using ASMC6.Server.Service
@using System.Text.Json
@inject HttpClient httpClient
@inject NavigationManager Navigation

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@* @attribute [Authorize(Roles = "1")] *@


@* <AuthorizeView Roles="1">
    <Authorized>
        <div class="row justify-content-center mt-3">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-header bg-danger text-white">
                        <h5 class="text-center mb-0">CHỈNH SỬA CỬA HÀNG</h5>
                    </div>
                    <div class="card-body">
                        <EditForm Model="@rest" OnValidSubmit="EditRestaurant">
                            <DataAnnotationsValidator />
                            <div class="text-danger mb-3">
                                <ValidationSummary />
                            </div>
                            <div class="form-group">
                                <label for="Name" class="control-label"><strong>Tên Cửa Hàng</strong></label>
                                <input @bind="rest.Name" class="form-control" placeholder="Nhập Tên" />
                                <ValidationMessage For="@(() => rest.Name)" />
                            </div>

                            <div class="form-group">
                                <label for="Image" class="control-label"><strong>Ảnh Cửa Hàng</strong></label>
                                <input type="file" class="form-control-file" />
                                <small class="form-text text-muted">Chọn một tệp hình ảnh để tải lên.</small>
                            </div>

                            <div class="form-group">
                                <label for="Address" class="control-label"><strong>Địa Chỉ</strong></label>
                                <input @bind="rest.Address" class="form-control" placeholder="Nhập Địa Chỉ" />
                                <ValidationMessage For="@(() => rest.Address)" />
                            </div>

                            <div class="form-group">
                                <label for="OpeningHours" class="control-label"><strong>Giờ Mở Cửa</strong></label>
                                <input type="text" @bind="rest.OpeningHours" class="form-control" placeholder="Nhập Giờ Mở Cửa" />
                                <ValidationMessage For="@(() => rest.OpeningHours)" />
                            </div>

                            <div class="form-group">
                                <label for="IsDelete" class="control-label"><strong>Trạng Thái Xóa</strong></label>
                                <input type="checkbox" @bind="rest.IsDelete" class="form-check-input" />
                                <ValidationMessage For="@(() => rest.IsDelete)" />
                            </div>

                            <div class="form-group text-center">
                                <div class="d-flex justify-content-center">
                                    <button type="submit" @onclick="Save" class="btn btn-danger mx-2">Cập Nhật</button>
                                    <a href="/adminrestaurantmanage" class="btn btn-secondary mx-2">Quay Về</a>
                                </div>
                            </div>
                        </EditForm>
                        @if (!string.IsNullOrEmpty(successMessage))
                        {
                            <div class="alert alert-success mt-3">
                                @successMessage
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(ero))
                        {
                            <div class="alert alert-danger mt-3">
                                @ero
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        @code {
        [Parameter]
        public int RestaurantId { get; set; }

        private string ero;
        private string successMessage;
        private ASMC6.Shared.Restaurant rest = new ASMC6.Shared.Restaurant();

        protected override async Task OnInitializedAsync()
        {
            if (RestaurantId > 0)
            {
                await LoadRestaurant(RestaurantId);
            }
        }

        private async Task LoadRestaurant(int id)
        {
            try
            {
                var response = await httpClient.GetAsync($"api/Restaurant/GetRestaurant/{id}");
                if (response.IsSuccessStatusCode)
                {
                    rest = await httpClient.GetFromJsonAsync<ASMC6.Shared.Restaurant>($"api/Restaurant/GetRestaurant/{id}");
                }
                else
                {
                    ero = $"Lỗi: {response.ReasonPhrase}";
                    Console.WriteLine(ero);
                }
            }
            catch (Exception ex)
            {
                ero = $"Lỗi: {ex.Message}";
                Console.WriteLine(ero);
            }
        }

        private async Task EditRestaurant()
        {
            try
            {
                var response = await httpClient.PutAsJsonAsync($"api/Restaurant/{rest.RestaurantId}", rest);
                if (response.IsSuccessStatusCode)
                {
                    successMessage = "Cập nhật thành công!";
                    ero = string.Empty;
                }
                else
                {
                    var responseContent = await response.Content.ReadAsStringAsync();
                    ero = $"Lỗi: {response.ReasonPhrase} - {responseContent}";
                    Console.WriteLine(ero);
                }
            }
            catch (Exception ex)
            {
                ero = $"Đã xảy ra lỗi: {ex.Message}";
                successMessage = string.Empty;
                Console.WriteLine(ero);
            }

            StateHasChanged();
        }
        }

    </Authorized>
    <NotAuthorized>
        <h3>Không có quyền truy cập</h3>
    </NotAuthorized>
</AuthorizeView>
 *@